package problem924_2

import shouldBeEqualTo

class Solution {
  fun minMalwareSpread(graph: Array<IntArray>, initial: IntArray): Int {
    TODO()
  }
}

fun main() {
  fun test(
    graph: Array<IntArray>, initial: IntArray,
    expected: Int,
  ) {
    val result = Solution().minMalwareSpread(graph, initial)
    println("$ -> ${result} == ${expected} -> ${result == expected}")
    result shouldBeEqualTo expected
  }

  test(
    arrayOf(
      intArrayOf(1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1),
      intArrayOf(0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0),
      intArrayOf(0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0),
      intArrayOf(0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0),
      intArrayOf(1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0),
      intArrayOf(0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0),
      intArrayOf(0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0),
      intArrayOf(0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0),
      intArrayOf(0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0),
      intArrayOf(0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0),
      intArrayOf(1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1)
    ),
    intArrayOf(7, 8, 2, 3),
    2
  )

  test(
    arrayOf(
      intArrayOf(1, 1, 0),
      intArrayOf(1, 1, 0),
      intArrayOf(0, 0, 1)
    ),
    intArrayOf(0, 1, 2),
    2
  )

  test(
    arrayOf(
      intArrayOf(1, 1, 0),
      intArrayOf(1, 1, 0),
      intArrayOf(0, 0, 1)
    ),
    intArrayOf(0, 1),
    0
  )

  test(
    arrayOf(
      intArrayOf(1, 0, 0),
      intArrayOf(0, 1, 0),
      intArrayOf(0, 0, 1)
    ),
    intArrayOf(0, 2),
    0
  )

  test(
    arrayOf(
      intArrayOf(1, 1, 1),
      intArrayOf(1, 1, 1),
      intArrayOf(1, 1, 1)
    ),
    intArrayOf(1, 2),
    1
  )
}